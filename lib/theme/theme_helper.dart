import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.black900,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.only(
              topLeft: Radius.circular(0.h),
              topRight: Radius.circular(0.h),
              bottomLeft: Radius.circular(12.h),
              bottomRight: Radius.circular(0.h),
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.deepOrange100,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.whiteA700,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 25.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray90002,
          fontSize: 17.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue300 => Color(0XFF65AAFA);
  Color get blue30001 => Color(0XFF65B2F9);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray10001 => Color(0XFFD5D5D5);
  Color get blueGray700 => Color(0XFF525252);
  Color get blueGray900 => Color(0XFF303030);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFC4C4);
  Color get deepOrange900 => Color(0XFFAE5300);

  // DeepPurple
  Color get deepPurpleA700 => Color(0XFF5100FF);

  // Gray
  Color get gray300 => Color(0XFFE3E3E3);
  Color get gray400 => Color(0XFFB1B1B1);
  Color get gray40001 => Color(0XFFBDBDBD);
  Color get gray50 => Color(0XFFFFF7F7);
  Color get gray500 => Color(0XFF989898);
  Color get gray700 => Color(0XFF636363);
  Color get gray70001 => Color(0XFF5B5B5B);
  Color get gray70002 => Color(0XFF555555);
  Color get gray800 => Color(0XFF393939);
  Color get gray900 => Color(0XFF231F20);
  Color get gray90001 => Color(0XFF2A2A2A);
  Color get gray90002 => Color(0XFF272727);

  // Green
  Color get greenA400 => Color(0XFF35FF6D);
  Color get greenA700 => Color(0XFF2EDE4A);
  Color get greenA70001 => Color(0XFF04CC24);

  // Indigo
  Color get indigoA100 => Color(0XFF9382FB);
  Color get indigoA10001 => Color(0XFF819DFF);
  Color get indigoA10002 => Color(0XFF9583FF);

  // LightGreen
  Color get lightGreenA100 => Color(0XFFBEEF81);

  // Lime
  Color get limeA200 => Color(0XFFEEFF35);

  // Orange
  Color get orange200 => Color(0XFFFFCD83);

  // Pinkf
  Color get pink9007f => Color(0X7F852E2E);

  // Red
  Color get red200 => Color(0XFFCDA2A2);
  Color get red400 => Color(0XFFBE5050);
  Color get red500 => Color(0XFFFF3535);
  Color get red5066 => Color(0X66FFEBEB);
  Color get redA200 => Color(0XFFFA6565);
  Color get redA20001 => Color(0XFFF96565);
  Color get redA700 => Color(0XFFAD0000);
  Color get redA70001 => Color(0XFFFF0000);
  Color get redA70002 => Color(0XFFEE0000);

  // TealAe
  Color get tealA2001e => Color(0X1E4AF4FF);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // YellowB
  Color get yellow500B2 => Color(0XB2FFF742);

  // Yellow
  Color get yellowA40060 => Color(0X60FFE500);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
